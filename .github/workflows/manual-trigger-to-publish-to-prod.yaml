name: Manual-Trigger-To-Publish-to-Prod
run-name: Manual-Trigger-To-Publish-to-Prod
on:
   workflow_dispatch:
    inputs:
     RELEASE_TAG_TO_PUBLISH:
      description: 'Enter production ready release tag to publish into prod instance'
      required: true
env:
  APIOPS_REPO: 'martin2176/apiops'
  BRANCH_TO_DEPLOY_FROM: 'artifacts'
  PUBLISH_ARTIFACTS_CHOICE: 'publish-delta-artifacts-in-specific-commit'
  
jobs:
    Set-CommitID-to-Publish-Artifacts:
     name: Set-CommitID-to-Publish-Artifacts
     runs-on: ubuntu-latest
     steps:
      - name: checkout-artifacts-branch
        id: checkout-artifacts-branch
        uses: actions/checkout@v4
        with:
         ref: '${{ env.BRANCH_TO_DEPLOY_FROM }}'
         fetch-tags: 'true'
         fetch-depth: 0
      - name: get-commitid-from-tag
        id: get-commitid-from-tag
        run: |
         tag="${{ inputs.RELEASE_TAG_TO_PUBLISH }}"
         echo "tag is ${tag}"
         if [ $(git tag -l "$tag") ]; then
          echo "Tag:${tag} exists in repo.Proceeding."
         else
          echo "Tag:${tag} does not exist in repo.Exiting."
          echo "Tag does not exist in repo. Hence cannot continue :thumbsdown:" > $GITHUB_STEP_SUMMARY
          exit 1
         fi
         COMMITID="$(git rev-list -n 1 $tag)"
         echo "commitid is $COMMITID"
         echo "COMMITID=${COMMITID}" >> "$GITHUB_OUTPUT"
         echo "PUBLISH_ARTIFACTS_CHOICE=${{ env.PUBLISH_ARTIFACTS_CHOICE }}" >> "$GITHUB_OUTPUT"
      - name: step-failed-to-get-commitid
        id: step-failed-to-get-commitid
        if: ${{ failure() && steps.get-commitid-from-tag.conclusion == 'failure' }}
        run: |
         echo "Step failed to get commitid from tag"     
     outputs:
      COMMITID: ${{ steps.get-commitid-from-tag.outputs.COMMITID }}
      PUBLISH_ARTIFACTS_CHOICE: ${{ steps.get-commitid-from-tag.outputs.PUBLISH_ARTIFACTS_CHOICE }}
    
    Print-User-Selections:
     name: Print-User-Selections
     runs-on: ubuntu-latest
     needs: Set-CommitID-to-Publish-Artifacts
     steps:
      - name: print-user-selections
        id: print-user-selections
        run: |
         echo "ref to checkout artifacts(commitid): ${{ needs.Set-CommitID-to-Publish-Artifacts.outputs.COMMITID}}"
         echo "publish artifacts choice: ${{ env.PUBLISH_ARTIFACTS_CHOICE}}"
         echo "branch to deploy artifacts from: ${{ env.BRANCH_TO_DEPLOY_FROM }}"