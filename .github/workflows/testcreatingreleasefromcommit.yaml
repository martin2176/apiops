name: TESTCREATERELEASEFROMCOMMIT
run-name: TESTCREATERELEASEFROMCOMMIT
on:
   workflow_dispatch:
    inputs:
     PUBLISH_ARTIFACTS_CHOICE:
      description: 'Choose "publish-all-artifacts-in-repo" only when you want to force republishing all artifacts.Else choose between the other two options"'
      required: true
      type: choice
      default: "publish-artifacts-in-last-commit"
      options:
       - "publish-delta-artifacts-in-last-commit"
       - "publish-all-artifacts-in-repo"
       - "publish-delta-artifacts-in-specific-commit"
     REFTOCHECKOUTFOR_ARTIFACTS:
      description: 'Enter specific Commit ID in Artifacts branch to look for artifacts.Default to the latest(last) commit'     
      required: true
      type: string
      default: "last commit"
env:
  APIOPS_REPO: 'martin2176/apiops'
  #REFTOCHECKOUTFOR_ARTIFACTS: ${{ inputs.REFTOCHECKOUTFOR_ARTIFACTS == 'last commit' && 'artifacts ' || 'inputs.REFTOCHECKOUTFOR_ARTIFACTS' }}
  
jobs:
    Set-CommitID-to-Extract-Artifacts:
     name: Set-CommitID-to-Extract-Artifacts
     runs-on: ubuntu-latest
     steps:
      - name: checkout-artifacts-branch
        id: checkout-artifacts-branch
        uses: actions/checkout@v4
        with:
         ref: 'artifacts'
         fetch-tags: 'false'
         fetch-depth: 1
      - name: printreftocheckoutartificats
        run: |
         echo "________"
         echo ${{ env.REFTOCHECKOUTFOR_ARTIFACTS }}
         echo "________"
      - name: set-commitid-on-manual-run-to-last-commit
        if: ${{ github.event_name == 'workflow_dispatch' && inputs.REFTOCHECKOUTFOR_ARTIFACTS == 'last commit' }}
        id: set-commitid-on-manual-run-to-last-commit
        run: echo "COMMITID=$(git rev-parse HEAD)" >> $GITHUB_ENV
      - name: set-commitid-on-manual-run-to-specific-commit
        if: ${{ github.event_name == 'workflow_dispatch' && inputs.REFTOCHECKOUTFOR_ARTIFACTS != 'last commit' }}
        id: set-commitid-on-manual-run-to-specific-commit
        run: echo "COMMITID=${{ inputs.REFTOCHECKOUTFOR_ARTIFACTS }}" >> $GITHUB_ENV
      - name: set-commitid
        id: set-commitid
        run: |
         echo "COMMITID=${COMMITID}" >> "$GITHUB_OUTPUT"
         echo "PUBLISH_ARTIFACTS_CHOICE=${{ inputs.PUBLISH_ARTIFACTS_CHOICE }}" >> "$GITHUB_OUTPUT"
     outputs:
      COMMITID: ${{ steps.set-commitid.outputs.COMMITID }}
      PUBLISH_ARTIFACTS_CHOICE: ${{ steps.set-commitid.outputs.PUBLISH_ARTIFACTS_CHOICE }}
    
    Print-User-Selections:
     name: Print-User-Selections
     runs-on: ubuntu-latest
     needs: Set-CommitID-to-Extract-Artifacts
     steps:
      - name: print-user-selections
        id: print-user-selections
        run: |
         echo "ref to checkout artifacts(commitid): ${{ needs.Set-CommitID-to-Extract-Artifacts.outputs.COMMITID}}"
         echo "publish artifacts choice: ${{ needs.Set-CommitID-to-Extract-Artifacts.outputs.PUBLISH_ARTIFACTS_CHOICE}}"

    Create-Production-Ready-Release:
     name: Create-Production-Ready-Release
     needs: [Set-CommitID-to-Extract-Artifacts,Print-User-Selections]
     runs-on: ubuntu-latest
     steps:
      - name: checkout-artifacts-branch
        id: checkout-artifacts-branch
        uses: actions/checkout@v4
        with:
         ref: 'artifacts'
         fetch-tags: 'true'
         fetch-depth: 0
         token: ${{ secrets.ghpattoken }}         
      - name: create-release-tag
        id: create-release-tag
        env:
         GH_TOKEN: ${{ secrets.ghpattoken }}
        run: |
         echo "___________________"
         COMMITID="${{ needs.Set-CommitID-to-Extract-Artifacts.outputs.COMMITID }}"
         echo "commit id is ${{ needs.Set-CommitID-to-Extract-Artifacts.outputs.COMMITID }}"
         echo "commitid is ${COMMITID}"
         COMMITID_SHORT="$(echo ${COMMITID} | cut -c1-7)"
         echo "commitidshort is $COMMITID_SHORT"
         PULL_REQUEST_NUMBER="$(gh pr list --search "${COMMITID}" --state merged --json url --jq ".[0].url"  | awk -F'/' '{print $NF}')"
         echo "pull request number is $PULL_REQUEST_NUMBER"
         echo "___________________"
         
         #syntax git tag <tag> <commitid>
         #git tag release-PR-${PULL_REQUEST_NUMBER}-SHA-${COMMITID_SHORT} ${{ needs.Set-CommitID-to-Extract-Artifacts.outputs.COMMITID }}
         #git push origin release-PR-${PULL_REQUEST_NUMBER}-SHA-${COMMITID_SHORT}
         #git tag release-PR-${{ needs.Set-CommitID-to-Extract-Artifacts.outputs.PULL_REQUEST_NUMBER}}-SHA-${{ needs.Set-CommitID-to-Extract-Artifacts.outputs.COMMITID_SHORT}} ${{ needs.Set-CommitID-to-Extract-Artifacts.outputs.COMMITID }}
         #git push origin release-PR-${{ needs.Set-CommitID-to-Extract-Artifacts.outputs.PULL_REQUEST_NUMBER}}-SHA-${{ needs.Set-CommitID-to-Extract-Artifacts.outputs.COMMITID_SHORT}}
