name: Run - Extractor-v2

on:
  workflow_dispatch:
    inputs:
      CONFIGURATION_YAML_PATH:
        description: 'Choose Wether to extract all Apis or extract apis listed an extraction configuration file'     
        required: true
        type: choice
        options:
        - 'Extract Selected APIM Artifacts'
        - 'Extract All APIM Artifacts'
      API_SPECIFICATION_FORMAT:
        description: 'API Specification Format'     
        required: true
        type: choice
        options:
        - OpenAPIV3Yaml 
        - OpenAPIV3Json
        - OpenAPIV2Yaml
        - OpenAPIV2Json

env:
  apiops_release_version: v6.0.1.3

jobs:
  extract:
    runs-on: ubuntu-latest
    environment: dev # change this to match the dev environment created in settings 
    steps:
      - uses: actions/checkout@v4
          
      - name: Run extractor
        
        env:
          AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          AZURE_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
          AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
          AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          AZURE_RESOURCE_GROUP_NAME: ${{ secrets.AZURE_RESOURCE_GROUP_NAME }}
          API_MANAGEMENT_SERVICE_NAME: ${{ secrets.API_MANAGEMENT_SERVICE_NAME }}
          API_MANAGEMENT_SERVICE_OUTPUT_FOLDER_PATH: ${{ GITHUB.WORKSPACE }}/apimartifacts  # change this to the artifacts folder
          API_SPECIFICATION_FORMAT: ${{ github.event.inputs.API_SPECIFICATION_FORMAT }}
                   
        run: |
          $var1="${{ github.event.inputs.CONFIGURATION_YAML_PATH }}"
          $var2="Extract All APIM Artifacts"
          $var3="Extract Selected APIM Artifacts"
          $var1
          $var2
          $var3
          if ($var1 -eq $var3) 
          {
          Write-Output "Extract Selected APIM Artifacts"
          $env:CONFIGURATION_YAML_PATH="configuration.extractor.yaml"
          $env:CONFIGURATION_YAML_PATH 
          }
          else
          {
          Write-Output "Extract All APIM Artifacts"
          Remove-Item Env:\CONFIGURATION_YAML_PATH
          }
          Set-StrictMode -Version Latest
          $ErrorActionPreference = "Stop"
          $VerbosePreference = "Continue"
          $InformationPreference = "Continue"

          Write-Information "Setting name variables..."
          $releaseFileName = "extractor-linux-x64.zip"
          $executableFileName = "extractor"

          if ("${{ runner.os }}" -like "*win*") {
            $releaseFileName = "extractor-win-x64.zip"
            $executableFileName = "extractor.exe"
          }
          elseif ("${{ runner.os }}" -like "*mac*" -and "${{ runner.arch }}" -like "*arm*") {
            $releaseFileName = "extractor-osx-arm64.zip"
          }
          elseif ("${{ runner.os }}" -like "*mac*" -and "${{ runner.arch }}" -like "*x86_64*") {
            $releaseFileName = "extractor-osx-x64.zip"
          }

          Write-Information "Downloading release..."
          $uri = "https://github.com/Azure/apiops/releases/download/${{ env.apiops_release_version }}/$releaseFileName"
          $downloadFilePath = Join-Path "${{ runner.temp }}" $releaseFileName
          Invoke-WebRequest -Uri "$uri" -OutFile "$downloadFilePath"

          Write-Information "Extracting release..."
          $executableFolderPath = Join-Path "${{ runner.temp }}" "extractor"
          Expand-Archive -Path "$downloadFilePath" -DestinationPath "$executableFolderPath"
          $executableFilePath = Join-Path "$executableFolderPath" $executableFileName

          Write-Information "Setting file permissions..."
          if ("${{ runner.os }}" -like "*linux*")
          {
            & chmod +x "$executableFilePath"
            if ($LASTEXITCODE -ne 0) { throw "Setting file permissions failed."}
          }

          Write-Information "Running extractor..."
          & "$executableFilePath"              
          if ($LASTEXITCODE -ne 0) { throw "Running extractor failed."}

          Write-Information "Execution complete."
        shell: pwsh
      
      - name: publish artifact
        uses: actions/upload-artifact@v4
        env:
          API_MANAGEMENT_SERVICE_OUTPUT_FOLDER_PATH: apimartifacts  # change this to the artifacts folder  
        with:
          name: artifacts-from-portal
          path: ${{ GITHUB.WORKSPACE }}/${{ env.API_MANAGEMENT_SERVICE_OUTPUT_FOLDER_PATH }}
