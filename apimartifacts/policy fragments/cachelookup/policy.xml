<!--
    IMPORTANT:
    - Policy fragment are included as-is whenever they are referenced.
    - If using variables. Ensure they are setup before use.
    - Copy and paste your code here or simply start coding
-->
<fragment>
	<cache-lookup-value key="@((string)context.Variables["tokenlookupkeyhash"])" variable-name="accesstoken" caching-type="internal" />
	<cache-lookup-value key="@((string)context.Variables["tokenlookupkeyhash-exp"])" variable-name="accesstoken-exp" caching-type="internal" />
	<choose>
		<when condition="@(context.Variables.ContainsKey("accesstoken") && context.Variables.ContainsKey("accesstoken-exp"))">
			<set-variable name="accesstoken" value="AAAA" />
			<set-variable name="accesstoken-exp" value="60" />
			<!-- <include-fragment fragment-id="tokenexchange-returntokentoclient" /> -->
		</when>
		<otherwise>
			<set-variable name="accesstoken" value="BBBB" />
			<set-variable name="accesstoken-exp" value="60" />
			<cache-store-value key="@((string)context.Variables["tokenlookupkeyhash"])" value="@((String)context.Variables["accesstoken"])" duration="60" caching-type="internal" />
			<cache-store-value key="@((string)context.Variables["tokenlookupkeyhash-exp"])" value="@((String)context.Variables["accesstoken-exp"])" duration="60" caching-type="internal" />
			<cache-store-value key="@((string)context.Variables["accesstoken"])" value="@((String)context.Variables["tokenlookupkeyhash"])" duration="60" caching-type="internal" />
			<!-- <include-fragment fragment-id="tokenexchange-returntokentoclient" /> -->
		</otherwise>
	</choose>
</fragment>