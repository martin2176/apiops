<fragment>
	<set-variable name="username" value="@{
string httpBody = context.Request.Body.As<String>(preserveContent: true);
var formDecodedHttpBody = new System.Collections.Generic.Dictionary<String, String>();
foreach (var encodedKeyValuePair in httpBody.Split('&'))
{
   string decodedKey = System.Net.WebUtility.UrlDecode(encodedKeyValuePair.Split('=')[0]);
   string decodedValue = System.Net.WebUtility.UrlDecode(encodedKeyValuePair.Split('=')[1]);
   formDecodedHttpBody.Add(decodedKey, decodedValue);
   
}
string username;
formDecodedHttpBody.TryGetValue("username", out username);
return username;
}" />
	<set-variable name="password" value="@{
string httpBody = context.Request.Body.As<String>(preserveContent: true);
var formDecodedHttpBody = new System.Collections.Generic.Dictionary<String, String>();
foreach (var encodedKeyValuePair in httpBody.Split('&'))
{
   string decodedKey = System.Net.WebUtility.UrlDecode(encodedKeyValuePair.Split('=')[0]);
   string decodedValue = System.Net.WebUtility.UrlDecode(encodedKeyValuePair.Split('=')[1]);
   formDecodedHttpBody.Add(decodedKey, decodedValue);
   
}
string password;
formDecodedHttpBody.TryGetValue("password", out password);
return password;
}" />
	<set-variable name="grant_type" value="@{
string httpBody = context.Request.Body.As<String>(preserveContent: true);
var formDecodedHttpBody = new System.Collections.Generic.Dictionary<String, String>();
foreach (var encodedKeyValuePair in httpBody.Split('&'))
{
   string decodedKey = System.Net.WebUtility.UrlDecode(encodedKeyValuePair.Split('=')[0]);
   string decodedValue = System.Net.WebUtility.UrlDecode(encodedKeyValuePair.Split('=')[1]);
   formDecodedHttpBody.Add(decodedKey, decodedValue);
   
}
string grant_type;
formDecodedHttpBody.TryGetValue("grant_type", out grant_type);
return grant_type;
}" />
	<choose>
		<when condition="@(string.IsNullOrEmpty(context.Variables.GetValueOrDefault<string>("grant_type")))">
			<return-response>
				<set-status code="400" reason="Bad Request" />
				<set-body>Grant Type not provided</set-body>
			</return-response>
		</when>
		<when condition="@(context.Variables.GetValueOrDefault<string>("grant_type") != "password")">
			<return-response>
				<set-status code="400" reason="Bad Request" />
				<set-body>Invalid Grant Type. Only supports password Grant Type</set-body>
			</return-response>
		</when>
		<when condition="@(string.IsNullOrEmpty(context.Variables.GetValueOrDefault<string>("username")))">
			<return-response>
				<set-status code="400" reason="Bad Request" />
				<set-body>Username not provided</set-body>
			</return-response>
		</when>
		<when condition="@(string.IsNullOrEmpty(context.Variables.GetValueOrDefault<string>("password")))">
			<return-response>
				<set-status code="400" reason="Bad Request" />
				<set-body>Password not provided</set-body>
			</return-response>
		</when>
	</choose>
</fragment>