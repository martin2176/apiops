<!--
    - Policies are applied in the order they appear.
    - Position <base/> inside a section to inherit policies from the outer scope.
    - Comments within policies are not preserved.
-->
<!-- Add policies as children to the <inbound>, <outbound>, <backend>, and <on-error> elements -->
<policies>
	<!-- Throttle, authorize, validate, cache, or transform the requests -->
	<inbound>
		<base />
		<validate-content unspecified-content-type-action="prevent" max-size="102400" size-exceeded-action="prevent" errors-variable-name="requestBodyValidation">
			<content type="application/json" validate-as="json" action="prevent" allow-additional-properties="true" />
		</validate-content>
	</inbound>
	<!-- Control if and how the requests are forwarded to services  -->
	<backend>
		<base />
	</backend>
	<!-- Customize the responses -->
	<outbound>
		<base />
	</outbound>
	<!-- Handle exceptions and customize error responses  -->
	<on-error>
		<base />
		<choose>
			<when condition="@(context.Response.StatusCode == 400 && context.LastError.Reason.Equals("ContentInvalid"))">
				<return-response>
					<set-status code="400" reason="Bad Request" />
					<set-header name="Content-Type" exists-action="override">
						<value>application/json</value>
					</set-header>
				</return-response>
			</when>
			<otherwise />
		</choose>
	</on-error>
</policies>