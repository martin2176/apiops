<!--
    - Policies are applied in the order they appear.
    - Position <base/> inside a section to inherit policies from the outer scope.
    - Comments within policies are not preserved.
-->
<!-- Add policies as children to the <inbound>, <outbound>, <backend>, and <on-error> elements -->
<policies>
	<!-- Throttle, authorize, validate, cache, or transform the requests -->
	<inbound>
		<base />
		<set-variable name="policyname" value="calloutpolicy1" />
		<set-variable name="starttime" value="@(DateTime.UtcNow)" />
		<send-request mode="new" response-variable-name="revenuedata" id="hello" timeout="20" ignore-error="true">
			<set-url>https://api.restful-api.dev/objects</set-url>
			<set-method>GET</set-method>
		</send-request>
		<include-fragment fragment-id="policytiming" />
		<set-variable name="allheaders" value="@(context.Variables.GetValueOrDefault<string>("context.Request.Headers"))" />
		<set-variable name="policyname" value="calloutpolicy2" />
		<set-variable name="starttime" value="@(DateTime.UtcNow)" />
		<send-request mode="new" response-variable-name="revenuedata" timeout="20" ignore-error="true">
			<set-url>https://mocktarget.apigee.net/user</set-url>
			<set-method>GET</set-method>
		</send-request>
		<include-fragment fragment-id="policytiming" />
		<set-variable name="policyname" value="calloutpolicy3" />
		<set-variable name="starttime" value="@(DateTime.UtcNow)" />
		<send-request mode="new" response-variable-name="revenuedata" timeout="20" ignore-error="true">
			<set-url>https://mocktarget.apigee.net</set-url>
			<set-method>GET</set-method>
		</send-request>
		<include-fragment fragment-id="policytiming" />
	</inbound>
	<!-- Control if and how the requests are forwarded to services  -->
	<backend>
		<choose>
			<when condition="true">
				<set-variable name="policyname" value="callbackend" />
				<set-variable name="starttime" value="@(DateTime.UtcNow)" />
				<forward-request />
				<include-fragment fragment-id="policytiming" />
			</when>
		</choose>
	</backend>
	<!-- Customize the responses -->
	<outbound>
		<base />
	</outbound>
	<!-- Handle exceptions and customize error responses  -->
	<on-error>
		<base />
	</on-error>
</policies>